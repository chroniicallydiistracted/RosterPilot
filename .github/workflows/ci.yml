name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  backend:
    name: Backend lint & tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'
      - name: Install Poetry
        run: pipx install poetry==1.8.3
      - name: Install dependencies
        working-directory: backend
        run: |
          poetry config virtualenvs.in-project true
          poetry install --with dev --sync --no-interaction --no-ansi
      - name: Validate environment config
        working-directory: backend
        run: poetry run rp-env-check
      - name: Lint backend
        working-directory: backend
        run: |
          poetry run ruff check app tests
          poetry run mypy --config-file ../mypy.ini app
      - name: Backend tests
        working-directory: backend
        run: poetry run pytest

  frontend:
    name: Frontend lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Lint frontend
        run: npm run lint --workspace frontend

  security:
    name: Security scans
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Secret scan
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--source=. --no-banner"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Backend dependency audit
        working-directory: backend
        run: |
          pipx install poetry==1.8.3
          poetry export --with dev --format=requirements.txt --output ../backend-requirements.txt
          pipx run --spec pip-audit==2.7.3 pip-audit -r ../backend-requirements.txt
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Frontend dependency audit
        run: |
          npm ci --ignore-scripts
          npm audit --omit=dev --audit-level=high
